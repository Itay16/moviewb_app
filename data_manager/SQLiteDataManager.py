from moviewb_app.data_manager.models import Users, Movies, Reviewfrom .data_manager_interface import DataManagerInterfacefrom flask_sqlalchemy import SQLAlchemydb = SQLAlchemy()class SQLiteDataManager(DataManagerInterface):    def __init__(self, database_uri, db):        self.database_uri = database_uri        self.db = db  # Store the db object    def add_user(self, name):        new_user = Users(name=name)        self.db.session.add(new_user)        self.db.session.commit()        return new_user    def get_all_users(self):        return Users.query.all()    def get_user_by_id(self, user_id):        return Users.query.get(user_id)    def add_movie(self, title, director, year, genre, rating, user, poster):        new_movie = Movies(title=title, director=director, year=year, genre=genre, rating=rating, user=user, poster=poster)        self.db.session.add(new_movie)        self.db.session.commit()    def delete_reviews_by_movie(self, movie_id):        reviews = self.db.session.query(Review).filter_by(movie_id=movie_id).all()        for review in reviews:            self.db.session.delete(review)    def delete_movie(self, movie_id):        movie = self.get_movie_by_id(movie_id)        if movie:            self.delete_reviews_by_movie(movie_id)  # Delete associated reviews            self.db.session.delete(movie)            self.db.session.commit()    def update_movie(self, movie_id, title, director, year, genre, rating):        movie = Movies.query.get(movie_id)        if movie:            movie.title = title            movie.director = director            movie.year = year            movie.genre = genre            movie.rating = rating            self.db.session.commit()        return movie    def get_movie_by_id(self, movie_id):        return Movies.query.get(movie_id)    def get_reviews_by_movie(self, movie_id):        return Review.query.filter_by(movie_id=movie_id).all()    def add_review(self, movie_id, user_id, rating, comment):        movie_rating = Review(movie_id=movie_id, user_id=user_id, rating=rating, comment=comment)        self.db.session.add(movie_rating)        self.db.session.commit()